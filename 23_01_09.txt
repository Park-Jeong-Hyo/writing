개발 단계

목적, 목표 정의

페르소나 정의

기능 정의서 작성



개발 툴 설치

1.vs code
2. node cs
익스텐션 설치 : 
1. liveserver: 웹 문서를 실행하기 위한 경량급 서버
2. code runner: 자바스크립트 코드를 node.js환경에서 실행

terminal cmder 명령어


dir 현재 디렉토리 내의 목록 보여주기
cls(clear screen) 화면 청소
cd(change directory) 폴더 이동
cd.. 상위폴더
cd. 현재 폴더
/ 루트
~ 홈
cd / 최상단 폴더로 이동

cd띄어쓰기폴더이름 :그 폴더 이동

dir/w : 간략화해서 보여줌

md,mkdir 폴더 만들기

rmdir 폴더 삭제

rm - d(remove directory)

cd ../.. 상위폴더로 두번 이동

cd ./javaedu10/project/html

start.: 탐색기창 실행

code. : 현재 폴더를 프로젝트 폴더로 하여 vsc실행

vsc, extension에서 live server을 설치

index.html 로 파일 생성

! 탭 누르면 html 뼈대 생성

ctrl + s하면 내용 저장됨

자바 스크립트 확장자 js

console.log('hello world!');

자바 스크립트의 실행환경은 두군데

에크마 스크립트?(ES) : 웹에서 실행, nodejs(웹 밖에서 실행)

에크마스크립트는 웹에서도 작동하고, 노드js에서도 작동함.

코드러너 설치 후, 코드 실행: cntrl alt n

인터넷 페이지 마우스 우클릭 하면 나타나는 매뉴: 컨텍스트 메뉴

브라우저 f12 = 검사모드

html, css로 웹페이지를 만든다.

htrl: 규격, 골격

css: 스타일

html에 옷을 어떻게 입히느냐에 따라 달라짐.

하나의 html에 여러개의 css가 작동 가능.

단순한 웹 문서라면 css, html로 가능

하지만 상호작용을 일으키려면 js가 필요하다.

브라우저가 하는 역할.

웹문서를 보여주기 위해서는 html, css가 필요하다

html css를 해석(렌더링)해서 화면을 만들어 주는게 브라우저의 역할

html css를 다운 받아서 해석해서 보여주는게 브라우저.

브라우저가 서버에 요청, 서버가 응답을 해서 브라우저로 쏴줌. 요청하는 건 url로

universsal resource location url을 받으면 서버가 브라우저에 보내 줌.

모든 걸 다 서버에서 다운을 받고, 그걸 해석해줌.

브라우저의 역할: 
서버에 요청하기, 화면 보여주기. 브라우저에는 웹문서를 렌더링하는 엔진이 탑재

자바스크립트의 실행환경도 브라우저에 포함되어 있음.

자바는 컴파일 언어 class 같은 중간 코드를 만드는데

js는 인터프리터, 중간 코드 없음.

인터프리터 언어는 하나의 명령어를 치면 바로 결과를 확인 할 수 있음. (js,파이썬 등)

인터프리터 언어가 같는 장점: 바로 명령어를 확인 할 수 있다.

에크마스크립트 web, 노드js 둘 다 사용 가능함

Element(요소): <시작태그>내용</종료태그>, 내용, 시작태그, 종료태그를 합한 것이 앨리먼트
content(내용): 시작태그와 종료태그 사이의 내용
start tag(시작태그)
end tag(종료태그)
single tag(단독 태그)
attribute(속성): 속성이름 + 속성값. 속성값은 홑따옴표, 쌍따옴표 둘다 가능함
	1. 기본 정의 속성, 사용자 정의 속성 두가지가 있다.
	2. 사전에 정의된 속성, 사용자 정의 속성

<hr>은 종료태그가 만들어 지지 않는다, 단독태그이기 때문
<hr/> 이렇게 단독태그를 표현하기도 한다.
단독태그는 컨텐츠가 없다. 

<html>
<head>
<title>:탭의 제목이 생성된다.
</title>
<style>
</style>
</head>
<body>: 웹 문서의 실질적인 내용이 오는 부분
<hr>: 단독 태그, 호라이즌, 수평선이 생긴다.
</body>
</html>

속성은 시작태그에 온다.
<botton class = "btn">클릭!</button>
class: 속성이름
"btn": 속성 값
속성 = 속성이름 + 속성값

<style></style> : 사이에 css 문법을 사용했다.
button.btn {
스타일을 주는 내용
}
button 엘리먼트의, btn 값을 가지는 걸 타겟팅 한 게 button.btn

box model: 모든 엘리먼트(요소)는 박스에 대응한다.

스타일을 주는 건 박스에 스타일을 주는 것이다.

user agent stylesheet: 브라우저 내에서 정의되어 있는 스타일

html은 head, body 두가지로 부분으로 나뉘어 짐

head에 메타데이터가 옴. 브라우저가 body를 해석하기 위한 부가성의 정보가 head에 온다.

body는 본문, 사용자가 보는 화면

contents에 다시 element가 올 수 있음.

문서의 구조를 기술하는 게 html

지금까지 html에 대한 내용.

css : 문서의 스타일을 기술
box model

css 문법 background, color, font-size

selector(선택자) {
속성1 : 값;
속성2	: 값;
}

javascript : 사용자와의 상호작용을 기술

html, css만 있으면 정적인 문서, 동적이게 만들려면 js가 있어야함.

프런트 엔지니어는 자바스크립트를 다뤄야 함. 에크마스크립트 6 버전 이상? 
에크마 스크립트의 단점을 강화한 게 타입 스크립트
대부분의 프로젝트에서는 에크마스크립트 보다는 타입스크립트를 사용함.

자바 스크립트는 html문서 내에서 <script> </script>사이에 기술됨.

console.log('') 문법: 콘솔창에 괄호 사이의 문자를 출력
alert('') 문법: 창을 하나 띄움


이러한 커뮤니티가 필요한 이유:

커뮤니티 기능을 통해 캠핑을 좋아하는 사람들 끼리의 소통을 편하게 하고
캠핑 관련 정보를 찾기 쉽게 할 수 있다. 또한 캠핑 사업자와의 쌍방향 소통도
기대할 수 있다?
