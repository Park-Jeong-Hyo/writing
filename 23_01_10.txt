사이트 소개
w3schools.com

<a> </a> 링크

<!-- -->: 주석
<stytle></style>는 head에

outline: 1px solid red, 바깥쪽 라인을 생성

컨트롤 슬래시 하면 한 줄 주석화

/* */: 여러줄 주석

모든 엘리먼트는 직 사각형 모양의 박스모델을 가지고 있음

엘리먼트가 표현될 때는 박스형태

엘리먼트를 감싸는 엘리먼트도 가능,

사용자 에이전트 스타일시트 브라우저 자체 정의된 것

box model: 컨텐츠영역, 내부여백, 경계선, 외부영역

padding 내부여백

테트리스를 잘해야 디자인을 잘 할 수 있음.

브라우저에서 코딩 뭐 하는 건 그냥 메모리상에서 바꾸는 것

https://html.spec.whatwg.org/multipage/embedded-content.html#the-img-element
공식 사이트에서 요소들 확인 가능

https://developer.mozilla.org/ko/docs/Learn/HTML
여기서도 참고 가능(한국어보다 영어가 나음)

픽사베이(무료이미지 사이트)

블록 레벨, 인라인 레벨

블록레벨: 영역을 한 두줄 모두 차지.
예: p태그,
인라인 레벨: 영역을 컨텐츠만큼 차지함.
예: <span>

<br>(line break) 줄바꿈

상호간 변환 가능

html 문서의 구조

element 요소: <시작태그>내용</종료태그>
contents(내용): 시작태그와 종료태그사이의 내용
start tag(시작태그)
end tag(종료태그)
empty tag:<hr>, <img>, <br>등 종료태그가 없는 것
attribute(속성): element의 시작태그에 위치
			ex) class(모든 요소에 부여가능, 태그종류 상관없이 그룹핑하는 용도), id(식별자로 사용, 한페이지 내에서 중복된 값을 가질 수 없음.) 

1.속성 이름= "속성값" or 속성 이름 = '속성 값'
2. 사전에 정의된 속성, 사용자 정의 속성 ('data-'로 시작)


class 붙여주는 건 분류를 하기 위한 것
    <img class = "img1" src="./img/img1.jpg" alt="">
	
	px뜻: pixel
	
	이미지 위치 지정을 상대경로로 했음
	
	    <style>
        img.img1 {
            width: 100px;
            height: 100px;
            display: inline;
        }
    </style>

display inline: 연달아서 나열

display block 쌓아서 나열

2em: 현재 요소 폰트크기의 2배

font-size: 폰트 굵기

의미 있는 태그를 써야지 검색이 되서 노출이 많이 된다.

작성한 그대로 출력이 되게 하려면

pre태그를 사용해야 한다.

코드 작성 순서에 따라서 적용되고 안되고 여부가 갈린다.

<link rel = "stylesheet" href = "./css/test3.css">
이렇게 외부 css에 연결해서 쓰는 방법

css는 3가지 사용법이 있음

1. 내부 css

2. 인라인 css

3. 외부 css

인라인> 내부> 외부 순서대로 우선순위가 높다.

가장 적게 쓰는 게 인라인,

인라인은 유지보수하기 껄끄러워서 잘 안쓴다.

색을 고르는 건 rgb, hex, hsl이 있다.

문서 내부의 id값은 서로 다른 값을 가져야 한다.

좀 더 구체적인게 스타일을 지정 할 때 우선순위를 갖는다.

id값으로 정의할 때 id앞에 #을 붙인다.

엘리먼트 이름보다 클래스 이름이 더 우선한다.

엘리먼트를 타겟팅할때 가장 중요한 것

가장 구체적인 것 = id

/* selector 우선순위 : id> class > element*/

element를 타격할 떄 가장 구체적인 것이 제일 좋다.

class 이름은 중복 될 수 있음. 하지만 id는 중복 불가.


클래스를 가리킬 때 . 사용, id를 가르킬 때 # 사용

ex) 태그, id, 클래스 다 나올 경우 p#id1.c1
. : 클래스를 나타냄
#: id를 나타냄
--------------------------------------------------
업무, 기술 그래프로 확인. 기술 난이도는 높은데 목표와 거리는 먼 4번같은 애들은 피해야 한다.

기술은 목표를 위한 도구.

모든 걸 알고 프로잭트를 하지는 않는다. 새로운 걸 하면서 계속 배우는 것.

예상 가능한 리스크/ 예상 못한 리스크

요구사항 정의서 -> 프로세스 설계서


