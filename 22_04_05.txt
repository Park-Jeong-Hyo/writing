FORM객체: UI/Controller 사이의 데이터 In/Out을 정의한 자바클래스 받는 자바클래스 정의

MultipartFile: 첨부파일, 정보추출, 물리파일을 로컬에 저장

DTO(data transfer object) :로직없이 데이터만 존재하는 객체
VO(Value Object): 로직포함, getter 만 존재(불변객체)
Entity: DB테이블과 1:1매칭되는 객체로 로직을 가질 수 있음.

요청메세지 method, url, 요청데이터

1. url경로 ex) http:/localhost:9080/members/{id} => @pathVariable("id")
2. url queryString ex) http://localhost:9080/members?id={id} =>@RequestParam("id")
	1. <form method="get">
	2. <a>
	3. fetch
3. 요청 헤더(태그로는 불가능, 자바스크립트로 fetch 요청헤더에 넣는 코드 한 적이 있다.)
	요청헤더에는 http규약에 따른 키와 값만 넣을 수 있는게 아니라 개발자의 필요에 따라서 만든
	키와 값도 넣을 수 있다.
4. 요청 메세지 바디
	1. <form action="post"> -> id=test@test.com&age=30 => @modelAttribute ~~form
		쿼리파라미터로 ex)&age=30이런 식으로 들어간다.
	2. fetch에 body로 넣는 법(텍스트, json) -> @RequestBody
	*첨부파일의 경우에는 요청메세지 바디에 들어간다.

응답 메세지
1. 일반 문자열 => @ResponseBody

2. json포멧 문자열 => @ResponseBody

3. view+데이터(thymeleaf) = html
