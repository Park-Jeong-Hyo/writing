* 개발 단계 (지금까지 진행)

1. 목적(목표를 바탕으로), 목표(3가지)를 정의
2. 페르소나 정의(이름, 나이, 취미 등등)
3. 기능 정의서 작성

* 개발 툴 설치

1. Visual studio code(VSC)
2. Node.js
	(1) liveserver: 웹 문서를 실행하기 위한 경량급 서버
	(2) code runner: 자바 스크립트 코드를 node.js환경에서 실행
	
* terminal cmder 명령어d

dir: 현재 디렉토리 내의 목록 보여주기
dir/w: 현재 디렉토리 간략화 해서 보여주기
cls(clear screen): 화면 청소
cd(change directory): 폴더 이동
cd..: 상위 폴더로 이동
cd. : 현재 폴더로 이동
cd /: 최상단 폴더로 이동
cd 폴더이름: 해당 폴더로 이동
~: 홈으로 돌아가기
md,mkdir : 폴더 만들기
rm - d(remove directory): 폴더 삭제
rmdir: 폴더 삭제
cd ../.. 상위 폴더로 두번 이동
cd ./javaedu10/project/html
start.: 탐색기창 실행
code.: 현재 폴더를 프로젝트 폴더로 하여 vsc실행

자바 스크립트는 웹, 웹밖에서 동작.

에크마 스크립트(ES): 웹에서도 작동, nodejs에서도 작동

인터넷 페이지 마우스 우클릭하면 나타나는 메뉴: 컨텍스트 메뉴

브라우저 f12: 검사모드

html, css로 웹페이지를 만든다.

html: 규격, 골격

css: 스타일

html에 옷을 어떻게 입히느냐에 따라 달라진다.

하나의 html에 여러개의 css 가 작동가능

단순한 웹문서라면 css, html로 가능
하지만 상호작용을 일으키려면 javascript가 필요하다.

브라우저가 하는 역할

웹 문서를 보여주기 위해서는 html,css 가 필요하다.
html css를 해석(렌더링)해서 화면을 만들어 주는게 브라우저의 역할
html css를 다운받아서 해석해서 보여주는 게 브라우저
브라우저가 서버에 요청, 서버가 응답을 해서 브라우저로 쏴줌.
요청하는 건 url로, universal resource location을
받으면 서버가 브라우저에 보내줌
모든걸 다 서버에서 다운을 받고 그걸 해석해줌.

브라우저의 역할
 1. 서버에 요청하기
 2. 화면 보여주기
 3. 브라우저에는 웹문서를 렌더링하는 엔진이 탑재

자바스크립트의 실행환경도 브라우저에 포함되어 있음.

자바는 컴파일언어, class같은 중간 코드를 만드는데

js는 인터프리터, 중간코드 없음.

인터프리터 언어는 하나의 명령어를 치면 바로 결과를 확인할 수 있다.

인터프리터 언어가 갖는 장점:  바로 명령어를 확인할 수 있다.

element(요소) <시작태그>내용</종료태그>, 내용, 시작태그, 종료태그를 합한것이 엘리먼트
contents(내용) 시작태그와 종료태그 사이의 내용
start tag(시작태그)
end tag(종료태그)
single tag(단독태그)
attribute(속성): 속성이름 + 속성값. 속성값은 홑따옴표, 쌍따옴표 둘다 사용가능.
				1. 기본 정의 속성, 사용자 정의 속성 두가지가 있음
				
<hr>은 종료태그가 만들어지지 않는다. 단독태그이기 때문이다.
</hr> 로 표현하기도 한다.

<html>
<head>
<title> 탭의 제목
<style>
</style>
</head>
<body>: 웹문서의 실질적인 내용이 오는 부분
<hr>: 단독 태그 ,호라이즌 ,수평선이 생긴다.
</body>
</html>

속성은 시작태그에 온다.
<botton class = "btn">클릭</button>
class: 속성이름
"btn": 속성값은
속성 = 속성이름 + 속성값은

<style></style> : 사이에 css 문법을 사용했다.

button.btn {스타일을 주는 내용}

button 엘리먼트의, btn값을 가지는 걸 타겟팅 한게 button.btn

boxmodel: 모든 엘리먼트(요소)는 박스에 대응한다.

스타일을 주는 건 박스에 스타일을 주는 것이다.

html은 head, body 두가지로 나눠진다.

head에 메타데이터가 온다. 브라우저가 body를 해석하기 위한 부가성의 정보가 온다.

body는 본문, 사용자가 보는 화면이다.

contents에 다시 element가 올 수 있따.

문서의 구조를 기술하는게 html이다.

css: 문서의 스타일을 기술하는게
box model을 사용한다.

css 문법: background, color, font-size

selector(선택자){
속성1: 값;
속성2: 값;
}

javascript: 사용자와의 상호작용을 기술하는게

html, css만 있으면 정적인 문서, 동적이게 만드려면 js가 있어야 한다.

프런트 엔지니어는 자바스크립트를 다뤄야 한다. 에크마스크립트 버전6이상
에크마 장점을 강화한 게 타입스크립트이다.
대부분의 프로젝트에서는 에크마스크립트보다는 타입스크립트를 사용한다.

자바스크립트는 html 문서내에서 <script></script>사이에 기술됨.

console.log('') 문법: 콘솔창에 괄호사이의 문자를 출력
alert('')문법: 창을 하나 띄움